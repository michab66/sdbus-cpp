<?xml version="1.0" encoding="UTF-8"?>

<node name="/consent/dbus/api/ConsentManager">
    <interface name="consent.dbus.api.ConsentManager">
        <!--
            Requests information on consent.

            @param userId The id of the user requesting consent.
            @param applicationId The id of the application that requests
            consent.
            @param applicationDisplayName An optional parameter used to pass
            a user-displayable name.  Note that this may be empty.
            @param context A context used for the above information.  This is 
            used for example by the browser that has the special requirement
            that it needs consent on web page granularity and passes the URL of
            the target web page here.
            @param piiScopeName The name of the required consent.  This is one 
            of the definitions published in the Scopes.h include file.

            @return true in case the user gave consent, false otherwise.
        -->
        <method name="queryConsent">
            <arg type="s" name="userId" direction="in" />
            <arg type="s" name="applicationId" direction="in" />
            <arg type="s" name="applicationDisplayName" direction="in" />
            <arg type="s" name="context" direction="in" />
            <arg type="s" name="piiScopeName" direction="in" />
            <arg type="s" name="result" direction="out" />
        </method>

        <!--
            An operation used to ensure that the NTG7 container is started
            and available.  Returns the concatenation of its parameters.
            If this operation succeeds the caller expects that the NTG7
            container is properly installed.
            @param first First argument for concatenation.  Must not be empty.
            @param second Second argument for concatenation.  Must not be 
            empty.
            @return The concatenation of the passed arguments.
        -->
        <method name="concatenate">
            <arg type="s" name="first" direction="in" />
            <arg type="s" name="second" direction="in" />
            <arg type="s" name="result" direction="out" />
        </method>


        <method name="quit">
            <arg type="b" name="result" direction="out" />
        </method>
    </interface>
</node>
